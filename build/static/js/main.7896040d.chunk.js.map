{"version":3,"sources":["pages/Dashboard.jsx","route/index.js","App.js","reportWebVitals.js","index.js"],"names":["Dashboard","props","useState","indonesian","setIndonesian","balinese","setBalinese","suggestions","setSuggestions","language","setLanguage","dictionary","setDictionary","dictionary2","setDictionary2","searchValue","setSearchValue","translation","setTranslation","loading","setLoading","setLoadDictionary","successCopying","setSuccessCopying","useEffect","fetchDictionary","result","searchTranslation","gsap","to","width","duration","setTimeout","fetch","then","res","json","data","indo","bali","forEach","word","indonesia","push","input","dictionaryIndex","indexOf","trim","toLowerCase","inputProps","value","onChange","event","newValue","id","pattern","className","onClick","document","getElementById","focus","onSuggestionsFetchRequested","inputValue","inputLength","length","filter","lang","slice","getSuggestions","onSuggestionsClearRequested","getSuggestionValue","suggestion","renderSuggestion","size","style","color","data-tip","text","onCopy","place","type","backgroundColor","arrowColor","delayShow","history","createBrowserHistory","publicRoutes","path","component","AppRouter","map","route","exact","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"2PA4OeA,MAtOf,SAAmBC,GAAQ,IAAD,EAEYC,mBAAS,IAFrB,mBAEjBC,EAFiB,KAELC,EAFK,OAGQF,mBAAS,IAHjB,mBAGjBG,EAHiB,KAGPC,EAHO,OAIcJ,mBAAS,IAJvB,mBAIjBK,EAJiB,KAIJC,EAJI,OAKQN,mBAAS,aALjB,mBAKjBO,EALiB,KAKPC,EALO,OAMYR,mBAASC,GANrB,mBAMjBQ,EANiB,KAMLC,EANK,OAOcV,mBAASG,GAPvB,mBAOjBQ,EAPiB,KAOJC,EAPI,OAQcZ,mBAAS,IARvB,mBAQjBa,EARiB,KAQJC,EARI,OAScd,mBAAS,IATvB,mBASjBe,EATiB,KASJC,EATI,OAUMhB,oBAAS,GAVf,mBAUjBiB,EAViB,KAURC,EAVQ,OAWoBlB,oBAAS,GAX7B,mBAWDmB,GAXC,aAYoBnB,oBAAS,GAZ7B,mBAYjBoB,EAZiB,KAYDC,EAZC,KAcxBC,qBAAU,WACRC,MACC,IAEHD,qBAAU,WACR,GAAIT,EAAa,CACf,IAAIW,EAASC,EAAkBZ,GAE/BG,EAAeQ,GACfN,GAAW,OACc,KAAhBL,IACTG,EAAe,IACfE,GAAW,MAEZ,CAACL,IAEJS,qBAAU,WACJF,IAEFM,KAAKC,GAAG,UAAW,CAAEC,MAAO,IAAKC,SAAU,MAE3CC,YAAW,WACTT,GAAkB,GAElBK,KAAKC,GAAG,UAAW,CAAEC,MAAO,EAAGC,SAAU,OACxC,SAEJ,CAACT,IAEJ,IAAMG,EAAkB,WACtBQ,MAAM,oFACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,IAAIC,EAAO,GACPC,EAAO,GACXF,EAAKG,SAAQ,SAAAC,GACPA,EAAKF,MAAQE,EAAKC,YACpBH,EAAKI,KAAKF,EAAKF,MACfD,EAAKK,KAAKF,EAAKC,eAGnBpC,EAAYiC,GACZzB,EAAeyB,GACfnC,EAAckC,GACd1B,EAAc0B,GACdjB,GAAkB,OAwBlBM,EAAoB,SAAAiB,GACxB,IAAIC,EAAkBlC,EAAWmC,QAAQF,EAAMG,OAAOC,eACtD,OAAyB,IAArBH,EACKhC,EAAYgC,GAEZ,6BAiCLI,EAAa,CACjBC,MAAOnC,EACPoC,SATe,SAACC,EAAD,GAA0B,IAAhBC,EAAe,EAAfA,UACM,IAA3BA,EAASP,QAAQ,OACnB9B,EAAeqC,GACfjC,GAAW,KAObkC,GAAI,cACJC,QAAS,SAmBX,OACE,gCACE,qBAAKC,UAAU,4EAAf,+BAGA,qBAAKA,UAAU,qEACf,qBAAKA,UAAU,iCAAf,SACE,sBAAKA,UAAU,yCAAf,UACE,sBAAKA,UAAU,6GAAf,UACE,qBAAKA,UAAU,2BAAf,SACG/C,IAEH,sBACE+C,UAAU,sFACVC,QAlBE,WACZC,SAASC,eAAe,eAAeC,SAe/B,UAKE,cAAC,IAAD,CACErD,YAAaA,EACbsD,4BAhCsB,SAAC,GAAe,IAAbX,EAAY,EAAZA,MACrC1C,EA7BqB,SAAA0C,GACrB,GAAIA,EAAO,CACT,IAAMY,EAAaZ,EAAMH,OAAOC,cAC1Be,EAAcD,EAAWE,OAE/B,OAAuB,IAAhBD,EAAoB,GAAKpD,EAAWsD,QAAO,SAAAC,GAAI,OACpDA,EAAKlB,cAAcmB,MAAM,EAAGJ,KAAiBD,MAuBlCM,CAAelB,KAgClBmB,4BA5BsB,WAClC7D,EAAe,KA4BH8D,mBArCa,SAAAC,GAAU,OAAIA,GAsC3BC,iBA1EW,SAAAD,GAAU,OACjC,gCACE,mBAAGf,UAAU,OAAb,SACEe,IAEF,mBAAGf,UAAU,YAAb,SACG7B,EAAkB4C,SAqEXtB,WAAYA,IAGZlC,EAAYiD,OAAS,GACrB,qBAAKR,UAAU,6CAAf,SACE,cAAC,IAAD,CAAsBC,QAAS,kBAAMzC,EAAe,KAAKyD,KAAK,QAAQC,MAAO,CAAEC,MAAO,kBAK9F,sBAAKnB,UAAU,sHAAf,UACE,qBAAKA,UAAU,8CAAf,SACE,cAAC,IAAD,CAAeC,QApHN,WAInB,OAHAzC,EAAe,IACfE,EAAe,IACfV,EAAe,IACPC,GACN,IAAK,YACHC,EAAY,QACZE,EAAcP,GACdS,EAAeX,GACf,MACF,IAAK,OACHO,EAAY,aACZE,EAAcT,GACdW,EAAeT,KAuG6BoE,KAAK,QAAQC,MAAO,CAACC,MAAO,YAEpE,qBAAKnB,UAAU,iCAAf,SACgB,cAAb/C,EAA2B,OAAS,cAEvC,qBAAK+C,UAAU,sDAAf,SAEIrC,EAEE,mBAAGqC,UAAU,mCAAb,iBAIFvC,EAEE,mBAAGuC,UAAU,gCAAb,SACGvC,IAGH,mBAAGuC,UAAU,mCAAb,yBAMJvC,EAAY+C,OAAS,GAAqB,8BAAhB/C,GAC1B,sBAAKuC,UAAU,oEAAf,UACE,qBAAKA,UAAU,WAAWoB,WAAS,kBAAnC,SACE,cAAC,kBAAD,CAAiBC,KAAM5D,EACrB6D,OAAQ,kBAAMvD,GAAkB,IADlC,SAEE,cAAC,IAAD,CAAYkD,KAAK,QAAQC,MAAO,CAAEC,MAAO,cAG7C,cAAC,IAAD,CACEI,MAAM,SACNC,KAAK,OACLC,gBAAgB,OAChBC,WAAW,OACXC,UAAW,IACX3B,UAAU,YAEZ,sBAAMF,GAAG,SAAT,8CCzNV8B,EAAUC,YAAqB,IAI/BC,EAAe,CACnB,CACEC,KAAM,IACNC,UAAWxF,IA4BAyF,EApBG,SAACxF,GAEjB,OACE,cAAC,IAAD,CAAQmF,QAASA,EAAjB,SAGE,cAAC,IAAD,UACGE,EAAaI,KAAI,SAACC,GAAD,OAChB,cAAC,IAAD,CAEEC,OAAK,EACLL,KAAMI,EAAMJ,KACZC,UAAYG,EAAMH,WAHbG,EAAMJ,c,MCpBRM,MARf,WACE,OACE,qBAAKrC,UAAU,MAAf,SACE,cAAC,EAAD,OCISsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9D,MAAK,YAAkD,IAA/C+D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9C,SAASC,eAAe,SAM1BmC,M","file":"static/js/main.7896040d.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport { AiOutlineSwap, AiOutlineCloseCircle, AiFillCopy } from 'react-icons/ai'\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport ReactTooltip from 'react-tooltip'\n\nfunction Dashboard(props) {\n\n  const [indonesian, setIndonesian] = useState([]);\n  const [balinese, setBalinese] = useState([]);\n  const [suggestions, setSuggestions] = useState([]);\n  const [language, setLanguage] = useState('Indonesia');\n  const [dictionary, setDictionary] = useState(indonesian);\n  const [dictionary2, setDictionary2] = useState(balinese);\n  const [searchValue, setSearchValue] = useState('');\n  const [translation, setTranslation] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [loadDictionary, setLoadDictionary] = useState(true);\n  const [successCopying, setSuccessCopying] = useState(false);\n\n  useEffect(() => {\n    fetchDictionary()\n  }, [])\n\n  useEffect(() => {\n    if (searchValue) {\n      let result = searchTranslation(searchValue)\n\n      setTranslation(result)\n      setLoading(false)\n    } else if (searchValue === '') {\n      setTranslation('')\n      setLoading(false);\n    }\n  }, [searchValue])\n\n  useEffect(() => {\n    if (successCopying) {\n      // eslint-disable-next-line no-undef\n      gsap.to('#copied', { width: 110, duration: 0.25 })\n\n      setTimeout(() => {\n        setSuccessCopying(false)\n        // eslint-disable-next-line no-undef\n        gsap.to('#copied', { width: 0, duration: 0.4 })\n      }, 1250);\n    }\n  }, [successCopying])\n\n  const fetchDictionary = () => {\n    fetch('https://opensheet.vercel.app/1UzyabhmIZ9atEB-WC4W0MTpPkRswFw8PBsBm3Q2T5KA/Sheet1')\n      .then(res => res.json())\n      .then(data => {\n        let indo = []\n        let bali = []\n        data.forEach(word => {\n          if (word.bali && word.indonesia) {\n            bali.push(word.bali)\n            indo.push(word.indonesia)\n          }\n        })\n        setBalinese(bali)\n        setDictionary2(bali)\n        setIndonesian(indo)\n        setDictionary(indo)\n        setLoadDictionary(false);\n      })\n  }\n\n  const swapLanguage = () => {\n    setSearchValue('');\n    setTranslation('');\n    setSuggestions([]);\n    switch (language) {\n      case \"Indonesia\":\n        setLanguage('Bali');\n        setDictionary(balinese);\n        setDictionary2(indonesian);\n        break;\n      case \"Bali\":\n        setLanguage('Indonesia');\n        setDictionary(indonesian);\n        setDictionary2(balinese);\n        break;\n      default:\n        break;\n    }\n  }\n\n  const searchTranslation = input => {\n    let dictionaryIndex = dictionary.indexOf(input.trim().toLowerCase())\n    if (dictionaryIndex !== -1) {\n      return dictionary2[dictionaryIndex]\n    } else {\n      return 'Tidak ditemukan translasi'\n    }\n  }\n\n  const renderSuggestion = suggestion => (\n    <div>\n      <p className='text'>\n       {suggestion}\n      </p>\n      <p className='translate'>\n        {searchTranslation(suggestion)}\n      </p>\n    </div>\n  );\n\n  const getSuggestions = value => {\n    if (value) {\n      const inputValue = value.trim().toLowerCase();\n      const inputLength = inputValue.length;\n  \n      return inputLength === 0 ? [] : dictionary.filter(lang =>\n        lang.toLowerCase().slice(0, inputLength) === inputValue\n      );\n    }\n  };\n\n  const onChange = (event, { newValue }) => {\n    if (newValue.indexOf(' ') === -1) {\n      setSearchValue(newValue)\n      setLoading(true)\n    }\n  };\n\n  const inputProps = {\n    value: searchValue,\n    onChange: onChange,\n    id: 'searchInput',\n    pattern: \"[^\\s]+\"\n  };\n\n  const getSuggestionValue = suggestion => suggestion;\n\n  // Autosuggest will call this function every time you need to update suggestions.\n  const onSuggestionsFetchRequested = ({ value }) => {\n    setSuggestions(getSuggestions(value))\n  };\n\n  // Autosuggest will call this function every time you need to clear suggestions.\n  const onSuggestionsClearRequested = () => {\n    setSuggestions([])\n  };\n\n  const focus = () => {\n    document.getElementById('searchInput').focus()\n  }\n\n  return (\n    <div>\n      <div className=\"title w-screen py-4 px-6 text-2xl border-b-2 border-gray-200 border-solid\">\n        Melajah Base Bali\n      </div>\n      <div className=\"w-screen bg-gray-50 h-32 border-b-2 border-gray-200 border-solid\"></div>\n      <div className=\"container mx-auto px-10 -mt-24\">\n        <div className=\"shadow-sm mx-auto flex justify-center \">\n          <div className='w-2/4 border-2 border-gray-200 border-solid border-r-0 rounded-md rounded-tr-none rounded-br-none bg-white'>\n            <div className=\"p-4 w-full font-semibold\">\n              {language}\n            </div>\n            <div\n              className=\"relative w-full h-32 border-t-2 border-r-2 border-gray-200 border-solid cursor-text\"\n              onClick={focus}\n            >\n              {/* <input className='text-xl p-4 w-full focus:outline-none focus-visible:outline-none' type=\"text\" name=\"\" id=\"\" /> */}\n              <Autosuggest\n                suggestions={suggestions}\n                onSuggestionsFetchRequested={onSuggestionsFetchRequested}\n                onSuggestionsClearRequested={onSuggestionsClearRequested}\n                getSuggestionValue={getSuggestionValue}\n                renderSuggestion={renderSuggestion}\n                inputProps={inputProps}\n              />\n              {\n                searchValue.length > 0 &&\n                <div className='absolute right-4 top-4 mt-1 cursor-pointer'>\n                  <AiOutlineCloseCircle onClick={() => setSearchValue('')} size='1.5em' style={{ color: 'grey' }} />\n                </div>\n              }\n            </div>\n          </div>\n          <div className='relative w-2/4 border-2 border-gray-200 border-solid border-l-0 rounded-md rounded-tl-none rounded-bl-none bg-white'>\n            <div className='absolute -left-2 top-4 -ml-1 cursor-pointer'>\n              <AiOutlineSwap onClick={swapLanguage} size='1.5em' style={{color: 'grey'}}/>\n            </div>\n            <div className=\"p-4 pl-10 w-full font-semibold\">\n              {language === \"Indonesia\" ? 'Bali' : 'Indonesia'}\n            </div>\n            <div className=\"w-full h-32 border-t-2 border-gray-200 border-solid\">\n              {\n                loading\n                ?\n                  <p className='p-4 w-full text-xl text-gray-400'>\n                    ...\n                  </p>\n                :\n                translation\n                ?\n                  <p className='p-4 w-full text-xl text-black'>\n                    {translation}\n                  </p>\n                :\n                  <p className='p-4 w-full text-xl text-gray-400'>\n                    Translasi\n                  </p>\n              }\n            </div>\n            {\n              translation.length > 0 && translation !== 'Tidak ditemukan translasi' &&\n              <div className='absolute right-4 bottom-4 w-6 h-6 overflow-visible cursor-pointer'>\n                <div className='copyIcon' data-tip=\"Salin translasi\">\n                  <CopyToClipboard text={translation}\n                    onCopy={() => setSuccessCopying(true)}>\n                    <AiFillCopy size='1.5em' style={{ color: 'grey' }} />\n                  </CopyToClipboard>\n                </div>\n                <ReactTooltip\n                  place='bottom'\n                  type='dark'\n                  backgroundColor='grey'\n                  arrowColor='grey'\n                  delayShow={250}\n                  className='tooltip'\n                />\n                <span id='copied' >Berhasil menyalin</span>\n              </div>\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Dashboard\n","/* eslint-disable react/jsx-no-bind */\nimport React from \"react\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\n\nimport {\n  Dashboard\n} from \"../pages\";\n\nconst history = createBrowserHistory({\n  /* pass a configuration object here if needed */\n});\n\nconst publicRoutes = [\n  {\n    path: \"/\",\n    component: Dashboard,\n  },\n];\n\nconst privateRoutes = [\n  \n]\n\nconst AppRouter = (props) => {\n\n  return (\n    <Router history={history}>\n      {/* <Suspense> */}\n\n      <Switch>\n        {publicRoutes.map((route) => (\n          <Route\n            key={route.path}\n            exact\n            path={route.path}\n            component={ route.component }\n          />\n        ))}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React from 'react';\nimport Router from './route';\n\nimport \"tailwindcss/tailwind.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}